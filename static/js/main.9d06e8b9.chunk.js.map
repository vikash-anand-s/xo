{"version":3,"sources":["App.js","xo/xo.js","index.js"],"names":["App","XO","_useState","useState","_useState2","Object","slicedToArray","turn","setTurn","_useState3","Array","fill","_useState4","cells","setCells","_useState5","_useState6","winner","setWinner","_useState7","_useState8","winCells","setWinCells","handleClick","num","squares","console","log","combos","across","down","diagonal","combo","forEach","pattern","winCellsTemp","checkForWinner","Cell","_ref","cellStyle","backgroundColor","color","react_default","a","createElement","style","onClick","className","ReactDOM","createRoot","document","getElementById","render","StrictMode","xo_xo"],"mappings":"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","file":"static/js/main.9d06e8b9.chunk.js","sourcesContent":["import React, { Component }  from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <h1>hey</h1>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\nimport './xo.css';\n\nfunction XO() {\n    const [turn, setTurn] = useState('X');\n    const [cells, setCells] = useState(Array(9).fill(''));\n    const [winner, setWinner] = useState();\n    const [winCells, setWinCells] = useState(Array(9).fill(false));\n\n    const checkForWinner = (squares) => {\n        let combos = {\n            across: [\n                [0, 1, 2],\n                [3, 4, 5],\n                [6, 7, 8]\n            ],\n            down: [\n                [0, 3, 6],\n                [1, 4, 7],\n                [2, 5, 8]\n            ],\n            diagonal: [\n                [0, 4, 8],\n                [2, 4, 6]\n            ]\n        };\n\n        for (let combo in combos) {\n            combos[combo].forEach((pattern) => {\n                if(squares[pattern[0]] === '' || \n                   squares[pattern[1]] === '' || \n                   squares[pattern[2]] === '')\n                   return;\n                else if(squares[pattern[0]] === squares[pattern[1]] &&\n                        squares[pattern[1]] === squares[pattern[2]]) {\n                        setWinner(squares[pattern[0]]);\n                        let winCellsTemp = winCells;\n                        winCellsTemp[pattern[0]] = true;\n                        winCellsTemp[pattern[1]] = true;\n                        winCellsTemp[pattern[2]] = true;\n                        setWinCells(winCellsTemp);\n                        console.log(winCells);\n                }\n            });\n        }\n    \n    }\n\n    const handleRestart = () => {\n        setTurn('X');\n        setCells(Array(9).fill(''));\n        setWinner(null);\n        setWinCells(Array(9).fill(false));\n    }\n\n    const handleClick = (num) => {\n        if(cells[num] !== '' || winner)\n        {\n            return;\n        }\n        let squares = cells;\n        squares[num] = turn;\n        setCells(squares);\n        console.log(squares);\n\n        if(turn === 'X'){\n            setTurn('O');\n        }\n        else{\n            setTurn('X');\n        }\n        \n        checkForWinner(squares);\n        console.log(\"Clicked \" + num);\n    }\n\n    const Cell = ({num}) => {\n        let cellStyle = {\n            backgroundColor: winCells[num] ? '#d4e054' : 'black',\n            color: winCells[num] ? 'black': '#50a3a2'\n        };\n        return <td style={cellStyle} onClick={() => handleClick(num)}>{cells[num]}</td>;\n    }\n\n    return (\n        <div>\n            <h1>TIC TAC TOE</h1>\n            <br />\n            {!winner && (<h3>Turn: {turn}</h3>)}\n            {winner && (<h3 className='result'>Winner is {winner}</h3>)}\n            <div className='container'>\n                <table>\n                    <tbody>\n                        <tr>\n                            <Cell num={0}/>\n                            <Cell num={1}/>\n                            <Cell num={2}/>\n                        </tr>\n                        <tr>\n                            <Cell num={3}/>\n                            <Cell num={4}/>\n                            <Cell num={5}/>\n                        </tr>\n                        <tr>\n                            <Cell num={6}/>\n                            <Cell num={7}/>\n                            <Cell num={8}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            {winner && (<button onClick={() => handleRestart()}>PLAY AGAIN</button>)}\n        \n            <p className=\"footer\">Developed by Vikash Anand S</p>\n  \n        </div>\n        \n    );\n}\n\nexport default XO;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport XO from './xo/xo';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <XO />\n  </React.StrictMode>\n);"],"sourceRoot":""}